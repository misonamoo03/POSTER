buildscript {
	ext {
		springBootVersion = '2.4.0'
		dependencyManagementVersion = '1.0.10.RELEASE'
		mooworkNodeVersion = "1.3.1"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.moowork.node" version "${mooworkNodeVersion}"
	id "java"
	id "org.springframework.boot" version "${springBootVersion}"
	id "io.spring.dependency-management" version "${dependencyManagementVersion}"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

//리액트 프로젝트 경로
//$projectDir은 스프링 부트 root 경로
def webappDir = "$projectDir/frontend/my-app"

task appNpmInstall(type: NpmTask) {
	workingDir = file("${webappDir}")
	args = ["run", "build"]
}
task copyWebApp(type: Copy) {
	from 'frontend/my-app/build'
	into "build/resources/main/static"
}
copyWebApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyWebApp)