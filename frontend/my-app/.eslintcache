[{"C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\App.js":"2","C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\index.js":"3","C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\page\\component\\PosterList.js":"4","C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\page\\component\\PosterItem.js":"5"},{"size":362,"mtime":1606113267102,"results":"6","hashOfConfig":"7"},{"size":159,"mtime":1606289514737,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1606113267102,"results":"9","hashOfConfig":"7"},{"size":1653,"mtime":1606289417020,"results":"10","hashOfConfig":"7"},{"size":1235,"mtime":1606291871771,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"h13e9q",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\reportWebVitals.js",[],["26","27"],"C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\App.js",[],["28","29"],"C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\index.js",[],["30","31"],"C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\page\\component\\PosterList.js",["32"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PosterItem from './PosterItem';\r\nimport axios from 'axios';\r\n\r\nconst PosterListBlock = styled.div`\r\n    box-sizing: border-box;\r\n    padding-bottom: 3rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst sampleMain = {\r\n    posterTitle: '제목',\r\n    posterContent: '내용',\r\n    posterRegister: '2'\r\n};\r\n\r\nconst PosterList = () => {\r\n    const [category, setCategory] = useState(null);\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n    \r\n        //async를 사용하는 함수 따로 선언\r\n        const fetchData = async() => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get('/api/category',);\r\n                setCategory(response.data.category);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // 대기 중일 때\r\n    if(loading) {\r\n        return <PosterListBlock>대기 중...</PosterListBlock>\r\n    }\r\n    // 아직 item 값이 설정되지 않았을 때\r\n    if (!category) {\r\n        return null;\r\n    }\r\n\r\n    // item 값이 유효할 때\r\n    return(\r\n        <PosterListBlock>\r\n            {category.map( category => (\r\n                <PosterItem key={category.ctgryNo} category={category} />\r\n            ))}\r\n        </PosterListBlock>\r\n    )\r\n}\r\n\r\nexport default PosterList;","C:\\Users\\SST\\IdeaProjects\\poster\\frontend\\my-app\\src\\page\\component\\PosterItem.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"34","replacedBy":"40"},{"ruleId":"36","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":19,"column":7,"nodeType":"44","messageId":"45","endLine":19,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":39,"column":24,"nodeType":"48","endLine":39,"endColumn":42},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],["49"],["50"],"no-unused-vars","'sampleMain' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]